local aw
local jpamt
local wsamt
local jp
local ws
coroutine.wrap(function()
    if aw == true and game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
wait(.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new()

wait(.5)

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").World1.Win.Touch.CFrame


firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, game:GetService("Workspace").World1.Win.Touch, 0)

firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, game:GetService("Workspace").World1.Win.Touch, 1)
    end
end)()
game.RunService.Heartbeat:Connect(function()
if game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and ws == true then
    game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").WalkSpeed = wsamt
end
if game.Players.LocalPlayer.Character ~= nil and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") and jp == true then
    game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").WalkSpeed = jpamt
end
end)
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
	Name = "Statue Hub",
	LoadingTitle = "Statue Hub",
	LoadingSubtitle = "made by wowzers!#0560",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "sirius", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = true -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})
local Tab = Window:CreateTab("Farming", 4483362458) -- Title, Image
local PLR = Window:CreateTab("Player", 4483362458) -- Title, Image
local Toggle = Tab:CreateToggle({
	Name = "Auto Win",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	aw = Value
	end,
})
local Toggle = PLR:CreateToggle({
	Name = "WalkSpeed",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	ws = Value
	end,
})
local Toggle = PLR:CreateToggle({
	Name = "JumpPower",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	jp = Value
	end,
})
local Slider = PLR:CreateSlider({
	Name = "JumpPower",
	Range = {32, 10000},
	Increment = 10,
	Suffix = "Studs",
	CurrentValue = 32,
	Flag = "", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	jpamt = Value
	end,
})
local Slider = PLR:CreateSlider({
	Name = "WalkSpeed",
	Range = {32, 10000},
	Increment = 10,
	Suffix = "Studs",
	CurrentValue = 32,
	Flag = "", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	wsamt = Value
	end,
})
